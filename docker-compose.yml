version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: booking_system
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - booking-network

  # Redis for caching (optional but recommended for production)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - booking-network

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:password123@db:5432/booking_system
      - JWT_SECRET_KEY=your-jwt-secret-key-change-in-production
      - CRM_SERVICE_URL=http://crm:5001
      - CRM_BEARER_TOKEN=your-static-bearer-token-here
      - NOTIFICATION_SERVICE_URL=http://notification:5002
      - BACKEND_SERVICE_TOKEN=backend-service-token-here
      - FLASK_ENV=production
    ports:
      - "5000:5000"
    depends_on:
      - db
      - notification
    networks:
      - booking-network
    volumes:
      - ./backend:/app
    restart: unless-stopped

  # CRM Service
  crm:
    build:
      context: ./crm_service
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:password123@db:5432/crm
      - CRM_BEARER_TOKEN=your-static-bearer-token-here
      - FLASK_ENV=production
    ports:
      - "5001:5001"
    depends_on:
      - db
    networks:
      - booking-network
    volumes:
      - ./crm_service:/app
    restart: unless-stopped

  # Notification Service
  notification:
    build:
      context: ./notification_service
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:password123@db:5432/notifications
      - SECRET_KEY=your-secret-key-here
      - BACKEND_SERVICE_TOKEN=backend-service-token-here
      - FLASK_ENV=production
    ports:
      - "5002:5002"
    depends_on:
      - db
    networks:
      - booking-network
    volumes:
      - ./notification_service:/app
    restart: unless-stopped

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - REACT_APP_API_URL=http://localhost:5000
      - REACT_APP_NOTIFICATION_URL=http://localhost:5002
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - booking-network
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
      - crm
      - notification
    networks:
      - booking-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  booking-network:
    driver: bridge
