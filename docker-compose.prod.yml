version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-booking_system}
      POSTGRES_USER: ${DATABASE_USER:-postgres}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-password123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - booking-network

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://${DATABASE_USER:-postgres}:${DATABASE_PASSWORD:-password123}@db:5432/${DATABASE_NAME:-booking_system}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-jwt-secret-key-change-in-production}
      - CRM_SERVICE_URL=http://crm:5001
      - CRM_BEARER_TOKEN=${CRM_BEARER_TOKEN:-your-static-bearer-token-here}
      - NOTIFICATION_SERVICE_URL=http://notification:5002
      - BACKEND_SERVICE_TOKEN=${BACKEND_SERVICE_TOKEN:-backend-service-token-here}
      - EMAIL_SERVICE_URL=http://email:5003
      - FLASK_ENV=production
      - PORT=5000
    ports:
      - "5000:5000"
    depends_on:
      - db
      - notification
      - email
    networks:
      - booking-network
    restart: unless-stopped

  # CRM Service
  crm:
    build:
      context: ./crm_service
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://${DATABASE_USER:-postgres}:${DATABASE_PASSWORD:-password123}@db:5432/crm
      - CRM_BEARER_TOKEN=${CRM_BEARER_TOKEN:-your-static-bearer-token-here}
      - FLASK_ENV=production
      - PORT=5001
    ports:
      - "5001:5001"
    depends_on:
      - db
    networks:
      - booking-network
    restart: unless-stopped

  # Notification Service
  notification:
    build:
      context: ./notification_service
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://${DATABASE_USER:-postgres}:${DATABASE_PASSWORD:-password123}@db:5432/notifications
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - BACKEND_SERVICE_TOKEN=${BACKEND_SERVICE_TOKEN:-backend-service-token-here}
      - FLASK_ENV=production
      - PORT=5002
    ports:
      - "5002:5002"
    depends_on:
      - db
    networks:
      - booking-network
    restart: unless-stopped

  # Email Service
  email:
    build:
      context: ./email_service
      dockerfile: Dockerfile
    environment:
      - SMTP_SERVER=${SMTP_SERVER:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - FROM_EMAIL=${FROM_EMAIL}
      - FROM_NAME=${FROM_NAME:-Booking System}
      - FLASK_ENV=production
      - PORT=5003
    ports:
      - "5003:5003"
    networks:
      - booking-network
    restart: unless-stopped

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:5000}
      - REACT_APP_NOTIFICATION_URL=${REACT_APP_NOTIFICATION_URL:-http://localhost:5002}
      - REACT_APP_GOOGLE_CLIENT_ID=${REACT_APP_GOOGLE_CLIENT_ID}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - booking-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  booking-network:
    driver: bridge
